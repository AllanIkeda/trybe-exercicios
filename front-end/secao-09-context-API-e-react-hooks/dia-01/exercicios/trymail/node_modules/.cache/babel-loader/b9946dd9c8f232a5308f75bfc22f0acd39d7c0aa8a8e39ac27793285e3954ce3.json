{"ast":null,"code":"var _jsxFileName = \"/home/allan/trybe-exercicios/front-end/secao-09-context-API-e-react-hooks/dia-01/exercicios/trymail/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TryMail from \"./components/TryMail\";\nimport emailList, { READ } from \"./data/emails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emails, setEmails] = useState(emailList);\n  const setStatus = (id, status) => {\n    const newEmails = emails.map(email => {\n      if (email.id === id) {\n        return {\n          ...email,\n          status\n        };\n      }\n      return email;\n    });\n    setEmails(newEmails);\n  };\n  useEffect(() => {\n    const readEmails = emails.filter(email => email.status === READ);\n    if (readEmails) {\n      alert(`Você tem ${readEmails.length} emails lidos`);\n    }\n  }, [emails]);\n  return /*#__PURE__*/_jsxDEV(TryMail, {\n    emails: emails,\n    setStatus: setStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mbYkXKyXMTBn91tU/CBIDEkLZqc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","TryMail","emailList","READ","App","emails","setEmails","setStatus","id","status","newEmails","map","email","readEmails","filter","alert","length"],"sources":["/home/allan/trybe-exercicios/front-end/secao-09-context-API-e-react-hooks/dia-01/exercicios/trymail/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TryMail from \"./components/TryMail\";\nimport emailList, { READ } from \"./data/emails\";\n\nfunction App() {\n  const [emails, setEmails] = useState(emailList);\n\n  const setStatus = (id, status) => {\n    const newEmails = emails.map((email) => {\n      if (email.id === id) {\n        return { ...email, status };\n      }\n      return email;\n    });\n    setEmails(newEmails);\n  };\n\n  useEffect(() => {\n    const readEmails = emails.filter((email) => email.status === READ);\n\n    if(readEmails) {\n      alert(`Você tem ${readEmails.length} emails lidos`);\n    }\n  }, [emails]);\n  return (\n    <TryMail emails={ emails } setStatus={ setStatus } />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,SAAS,IAAIC,IAAI,QAAQ,eAAe;AAAC;AAEhD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAACE,SAAS,CAAC;EAE/C,MAAMK,SAAS,GAAG,CAACC,EAAE,EAAEC,MAAM,KAAK;IAChC,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAG,CAAEC,KAAK,IAAK;MACtC,IAAIA,KAAK,CAACJ,EAAE,KAAKA,EAAE,EAAE;QACnB,OAAO;UAAE,GAAGI,KAAK;UAAEH;QAAO,CAAC;MAC7B;MACA,OAAOG,KAAK;IACd,CAAC,CAAC;IACFN,SAAS,CAACI,SAAS,CAAC;EACtB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGR,MAAM,CAACS,MAAM,CAAEF,KAAK,IAAKA,KAAK,CAACH,MAAM,KAAKN,IAAI,CAAC;IAElE,IAAGU,UAAU,EAAE;MACbE,KAAK,CAAE,YAAWF,UAAU,CAACG,MAAO,eAAc,CAAC;IACrD;EACF,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EACZ,oBACE,QAAC,OAAO;IAAC,MAAM,EAAGA,MAAQ;IAAC,SAAS,EAAGE;EAAW;IAAA;IAAA;IAAA;EAAA,QAAG;AAEzD;AAAC,GAvBQH,GAAG;AAAA,KAAHA,GAAG;AAyBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}